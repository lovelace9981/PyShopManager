--TRIGGER DE BAJA DE CLIENTE
-- AL DAR DE BAJA UN CLIENTE, DEBEMOS BORRAR LOS REGISTROS DE SUS COMPRAS REALIZADAS

DROP TRIGGER IF EXISTS BAJA_CLIENTE;
DELIMITER // -- DELIMITADOR PARA INTRODUCIR LAS SENTENCIAS DE TRIGGERS
CREATE TRIGGER BAJA_CLIENTE AFTER UPDATE ON CLIENTE 
FOR EACH ROW 
BEGIN
    IF (NEW.ID_EMPLEADO_BAJA IS NOT NULL AND OLD.ID_EMPLEADO_BAJA IS NULL) THEN
        DELETE FROM PEDIDO WHERE ID_CLIENTE = NEW.ID_CLIENTE;
        INSERT INTO BAJA_CLIENTE VALUES (NEW.ID_CLIENTE, NEW.ID_EMPLEADO_BAJA, NOW());
    ELSE 
        SIGNAL SQLSTATE '45000' SET MYSQL_ERRNO=30005, MESSAGE_TEXT='ERROR: Ya ha sido dado de baja el empleadooo';
    END IF;
END; //


DROP TRIGGER IF EXISTS ALTA_CLIENTE;
CREATE TRIGGER ALTA_CLIENTE AFTER INSERT ON CLIENTE 
FOR EACH ROW 
BEGIN
    IF (NEW.ID_EMPLEADO_ALTA IS NOT NULL) THEN
        INSERT INTO ALTA_CLIENTE VALUES (NEW.ID_CLIENTE, NEW.ID_EMPLEADO_ALTA, NOW());
    END IF;
END; //

-- TRIGGER de comprobacion de existencia de cod postal antes de insercion en su tabla
DROP TRIGGER IF EXISTS EXISTE_COD_POSTAL_INSERT;
CREATE TRIGGER EXISTE_COD_POSTAL_INSERT BEFORE INSERT ON CIUDADES
FOR EACH ROW
BEGIN
    IF ((SELECT COUNT(*) FROM CIUDADES WHERE COD_POSTAL = NEW.COD_POSTAL) = 1) THEN
        SIGNAL SQLSTATE '45000' SET MYSQL_ERRNO=30001, MESSAGE_TEXT='ERROR: Existe el COD POSTAL introducido!!!';
    END IF;
END; //


-- TRIGGER de comprobacion de existencia de cod postal
DROP TRIGGER IF EXISTS EXISTE_COD_POSTAL;
CREATE TRIGGER EXISTE_COD_POSTAL BEFORE INSERT ON CLIENTE
FOR EACH ROW
BEGIN
    IF ((SELECT COUNT(*) FROM CIUDADES WHERE COD_POSTAL = NEW.COD_POSTAL) = 0) THEN
        SIGNAL SQLSTATE '45000' SET MYSQL_ERRNO=30001, MESSAGE_TEXT='ERROR: No existe el COD POSTAL introduzcalo';
    END IF;
END; //

-- Existe pedido para cliente
-- Se realiza un PEDIDO y la Query es un INSERT, antes de hacer el insert en la tabla, se comprueba que efectivamente.
-- existe un producto.
DROP TRIGGER IF EXISTS EXISTE_PRODUCTO;
CREATE TRIGGER EXISTE_PRODUCTO BEFORE INSERT ON PEDIDO
FOR EACH ROW
BEGIN
    IF ((SELECT COUNT(*) FROM STOCK WHERE ID_PRODUCTO = NEW.ID_PRODUCTO) = 0) THEN
        SIGNAL SQLSTATE '45000' SET MYSQL_ERRNO=30001, MESSAGE_TEXT='ERROR: No existe el producto seleccionado';
    END IF;
END; //

DROP TRIGGER IF EXISTS NO_STOCK;
CREATE TRIGGER NO_STOCK BEFORE UPDATE ON STOCK
FOR EACH ROW
BEGIN
    IF (NEW.CANTIDAD < 0) THEN
        SIGNAL SQLSTATE '45000' SET MYSQL_ERRNO=30002, MESSAGE_TEXT='ERROR: Has introducido una cantidad que excede el stock';
    END IF;
END; //

-- En ENUM 2 == 'En Reparto' acceso por indice
DROP TRIGGER IF EXISTS FECHA_PROGRAMADA;
CREATE TRIGGER FECHA_PROGRAMADA BEFORE UPDATE ON PEDIDO
FOR EACH ROW
BEGIN
    SELECT FECHA_ENTREGA_PROGRAMADA INTO @ENTREGA FROM PEDIDO WHERE ID_PEDIDO=NEW.ID_PEDIDO;
    IF (NEW.ESTADO = 2 AND @ENTREGA > NOW()) THEN
        SIGNAL SQLSTATE '45000' SET MYSQL_ERRNO=30004, MESSAGE_TEXT='ERROR: El pedido no se puede entregar hoy, pruebe con otro';
    ELSEIF (NEW.ESTADO=1 AND NEW.FECHA_ENTREGA_PROGRAMADA < NOW() AND NEW.ID_REPARTIDOR IS NULL) THEN
        SIGNAL SQLSTATE '45000' SET MYSQL_ERRNO=30004, MESSAGE_TEXT='ERROR: El pedido no se puede entregar en el pasado!!';
    END IF;
END; //

DROP TRIGGER IF EXISTS SELECT_PEDIDO_CORRECTO;
CREATE TRIGGER SELECT_PEDIDO_CORRECTO BEFORE UPDATE ON PEDIDO
FOR EACH ROW
BEGIN
    IF ((SELECT COUNT(*) FROM PEDIDO WHERE ID_PEDIDO=NEW.ID_PEDIDO AND NEW.ID_REPARTIDOR IS NULL AND OLD.ESTADO=1) = 1) THEN
        SIGNAL SQLSTATE '45000' SET MYSQL_ERRNO=30005, MESSAGE_TEXT='ERROR: El pedido indicado no se puede cambiar ya que no ha sido solicitado';
    ELSEIF ((SELECT COUNT(*) FROM PEDIDO WHERE ID_PEDIDO=NEW.ID_PEDIDO AND (OLD.ID_REPARTIDOR!=NEW.ID_REPARTIDOR)) = 1) THEN
        SIGNAL SQLSTATE '45000' SET MYSQL_ERRNO=30005, MESSAGE_TEXT='ERROR: El pedido ha sido solicitado por otro repartidor';
    END IF;
END; // 

-- Queremos evitar que un pedido entregado se cambie de estado

DROP TRIGGER IF EXISTS CONFIRMAR_CANCELAR_PEDIDO;
CREATE TRIGGER CONFIRMAR_CANCELAR_PEDIDO BEFORE UPDATE ON PEDIDO 
FOR EACH ROW
BEGIN
    IF (OLD.ESTADO=3) THEN
        SIGNAL SQLSTATE '45000' SET MYSQL_ERRNO=30004, MESSAGE_TEXT='   ERROR: El pedido seleccionado no se puede confirmar/cancelar!   ';
    END IF;
END; //

DELIMITER ;